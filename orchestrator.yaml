apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      hostNetwork: true
      containers:
        - name: api-gateway
          image: docker.io/brahami319/api_gateway
          ports:
            - containerPort: 3000

---
apiVersion: v1
kind: Service
metadata:
  name: api-gateway-service
spec:
  type: NodePort
  selector:
    app: api-gateway
  ports:
    - port: 3000
      targetPort: 3000
      nodePort: 31000
    # Add this line if you want to expose the service externally

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: service-registry-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: service-registry
  template:
    metadata:
      labels:
        app: service-registry
    spec:
      containers:
        - name: service-registry
          image: docker.io/brahami319/service_registry:latest
          ports:
            - containerPort: 3001

---
apiVersion: v1
kind: Service
metadata:
  name: service-registry-service
spec:
  selector:
    app: service-registry
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3001
      nodePort: 31001
  type: NodePort # Add this line if you want to expose the service externally

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: service-auth-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: service-auth
  template:
    metadata:
      labels:
        app: service-auth
    spec:
      containers:
        - name: service-auth
          image: docker.io/brahami319/service_auth:latest
          ports:
            - containerPort: 3002

---
apiVersion: v1
kind: Service
metadata:
  name: service-auth-service
spec:
  selector:
    app: service-auth
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3002
      nodePort: 31002
  type: NodePort # Add this line if you want to expose the service externally
